Slip 9

Q1) Write an HTML 5 program for student registration form for college admission. Use input type like search, email, date etc
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Registration Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }

    form {
      max-width: 600px;
      margin: 0 auto;
    }

    label {
      display: block;
      margin-bottom: 8px;
    }

    input, select {
      width: 100%;
      padding: 8px;
      margin-bottom: 16px;
      box-sizing: border-box;
    }

    button {
      background-color: #4CAF50;
      color: white;
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h2>Student Registration Form</h2>

  <form action="#" method="post">
    <label for="fullName">Full Name:</label>
    <input type="text" id="fullName" name="fullName" required>

    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required>

    <label for="dob">Date of Birth:</label>
    <input type="date" id="dob" name="dob" required>

    <label for="gender">Gender:</label>
    <select id="gender" name="gender" required>
      <option value="male">Male</option>
      <option value="female">Female</option>
      <option value="other">Other</option>
    </select>

    <label for="address">Address:</label>
    <input type="text" id="address" name="address" required>

    <label for="city">City:</label>
    <input type="text" id="city" name="city" required>

    <label for="state">State:</label>
    <input type="text" id="state" name="state" required>

    <label for="zipcode">Zip Code:</label>
    <input type="text" id="zipcode" name="zipcode" pattern="[0-9]{5}" required>
    <small>Format: 12345</small>

    <button type="submit">Submit</button>
  </form>

</body>
</html>
Q2
1. Model the following Customer Loan information as a documentdatabase. Consider Customer Loan information system where the customer can take many types of loans. 
2. Assume appropriate attributes and collections as per the query requirements [3] 
3. Insert at least 10 documents in each collection. [3] 
4. Answer the following Queries. 
a. List all customers whose name starts with 'D' character [3] 
b.List the names of customer in descending order who has taken a loan from Pimpri city. [3] 
c.Display customer details having maximum loan amount. [4]
d.Update the address of customer whose name is “Mr. Patil” and loan_amt is greater than 100000.

use customerloan
switched to db customerloan
> db.customer.insert({cid:1,cname:"Dipali",address:"Pune"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({cid:2,cname:"Mr.Patil",address:"Pimpri"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({cid:3,cname:"Mr.Sharma",address:"Pune"})
WriteResult({ "nInserted" : 1 })
> db.customer.find({}).pretty()
{
	"_id" : ObjectId("6576e2caae5a4febbd618e19"),
	"cid" : 1,
	"cname" : "Dipali",
	"address" : "Pune"
}
{
	"_id" : ObjectId("6576e2e5ae5a4febbd618e1a"),
	"cid" : 2,
	"cname" : "Mr.Patil",
	"address" : "Pimpri"
}
{
	"_id" : ObjectId("6576e314ae5a4febbd618e1b"),
	"cid" : 3,
	"cname" : "Mr.Sharma",
	"address" : "Pune"
}
> db.loan.insert({lid:101,cname:"Dipali",ltype:"HomeLoan",lamount:150000,lcity:"Pimpri"})
WriteResult({ "nInserted" : 1 })
> db.loan.insert({lid:102,cname:"Mr.Patil",ltype:"Carloan",lamount:180000,lcity:"Pune"})
WriteResult({ "nInserted" : 1 })
> db.loan.insert({lid:103,cname:"Mr.Sharma",ltype:"educationloan",lamount:190000,lcity:"Mumbai"})
WriteResult({ "nInserted" : 1 })
> db.loan.find({}).pretty()
{
	"_id" : ObjectId("6576e4f5ae5a4febbd618e1c"),
	"lid" : 101,
	"cname" : "Dipali",
	"ltype" : "HomeLoan",
	"lamount" : 150000,
	"lcity" : "Pimpri"
}
{
	"_id" : ObjectId("6576e53eae5a4febbd618e1d"),
	"lid" : 102,
	"cname" : "Mr.Patil",
	"ltype" : "Carloan",
	"lamount" : 180000,
	"lcity" : "Pune"
}
{
	"_id" : ObjectId("6576e57bae5a4febbd618e1e"),
	"lid" : 103,
	"cname" : "Mr.Sharma",
	"ltype" : "educationloan",
	"lamount" : 190000,
	"lcity" : "Mumbai"
}
> db.customer.find({cname:{$regex:"D"}}).pretty()
{
	"_id" : ObjectId("6576e2caae5a4febbd618e19"),
	"cid" : 1,
	"cname" : "Dipali",
	"address" : "Pune"
}
> db.customer.find({cname:{$regex:"Mr.P"}}).pretty()
{
	"_id" : ObjectId("6576e2e5ae5a4febbd618e1a"),
	"cid" : 2,
	"cname" : "Mr.Patil",
	"address" : "Pimpri"
}
> db.loan.insert({lid:104,cname:"Mr.Patel",ltype:"educationloan",lamount:120000,lcity:"Pimpri"})
WriteResult({ "nInserted" : 1 })
> db.loan.find({}).pretty()
{
	"_id" : ObjectId("6576e4f5ae5a4febbd618e1c"),
	"lid" : 101,
	"cname" : "Dipali",
	"ltype" : "HomeLoan",
	"lamount" : 150000,
	"lcity" : "Pimpri"
}
{
	"_id" : ObjectId("6576e53eae5a4febbd618e1d"),
	"lid" : 102,
	"cname" : "Mr.Patil",
	"ltype" : "Carloan",
	"lamount" : 180000,
	"lcity" : "Pune"
}
{
	"_id" : ObjectId("6576e57bae5a4febbd618e1e"),
	"lid" : 103,
	"cname" : "Mr.Sharma",
	"ltype" : "educationloan",
	"lamount" : 190000,
	"lcity" : "Mumbai"
}
{
	"_id" : ObjectId("6576e8a9ae5a4febbd618e1f"),
	"lid" : 104,
	"cname" : "Mr.Patel",
	"ltype" : "educationloan",
	"lamount" : 120000,
	"lcity" : "Pimpri"
}
}
> db.loan.find({lcity:"Pimpri"}).sort({cname:-1}).pretty()
{
	"_id" : ObjectId("6576e8a9ae5a4febbd618e1f"),
	"lid" : 104,
	"cname" : "Mr.Patel",
	"ltype" : "educationloan",
	"lamount" : 120000,
	"lcity" : "Pimpri"
}
{
	"_id" : ObjectId("6576e4f5ae5a4febbd618e1c"),
	"lid" : 101,
	"cname" : "Dipali",
	"ltype" : "HomeLoan",
	"lamount" : 150000,
	"lcity" : "Pimpri"
}
> db.loan.find({}).sort({"lamount":-1}).limit(1).pretty()
{
	"_id" : ObjectId("6576e57bae5a4febbd618e1e"),
	"lid" : 103,
	"cname" : "Mr.Sharma",
	"ltype" : "educationloan",
	"lamount" : 190000,
	"lcity" : "Mumbai"
> db.customer.update({address:"Pimpri"},{$set:{address:"Pune"}})
WriteResult({ "nMatched" : 0, "nUpserted" : 0, "nModified" : 0 })
> db.customer.find({}).pretty()
{
	"_id" : ObjectId("6576e2caae5a4febbd618e19"),
	"cid" : 1,
	"cname" : "Dipali",
	"address" : "Pune"
}
{
	"_id" : ObjectId("6576e2e5ae5a4febbd618e1a"),
	"cid" : 2,
	"cname" : "Mr.Patil",
	"address" : "Pune"
}
{
	"_id" : ObjectId("6576e314ae5a4febbd618e1b"),
	"cid" : 3,
	"cname" : "Mr.Sharma",
	"address" : "Pune"
}
